# Temporarily disabled

name: 'Terragrunt Plan'

on:
  # pull_request:
  #   branches:
  #   - main

# Allows you to run this workflow manually from the Actions tab
  # workflow_dispatch:
  workflow_dispatch

jobs:
  terragrunt_plan:
    name: Terragrunt Plan
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: true
        ssh-key: ${{ secrets.SSH_KEY}}

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.2.5
        terraform_wrapper: false

    - name: Terraform Format
      run: terraform fmt -check -recursive

    # may want to check this out further
    - name: Setup Terragrunt
      uses: autero1/action-terragrunt@v1.0.0
      with:
        terragrunt_version: 0.38.3

    - name: Set up gcloud Cloud SDK environment
      # You may pin to the exact commit or the version.
      # uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
      uses: google-github-actions/setup-gcloud@v0.2.1
      with:
        # Version of the gcloud SDK to install. If unspecified or set to "latest", the latest available gcloud SDK version for the target platform will be installed. Example: "290.0.1".
        # version: 362.0.0 # optional, default is latest
        # Service account key to use for authentication. This should be the JSON formatted private key which can be exported from the Cloud Console. The value can be raw or base64-encoded.
        service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        # Export the provided credentials as Google Default Application Credentials. This will make the credentials available to later steps via the GOOGLE_APPLICATION_CREDENTIALS environment variable. Future steps that consume Default Application Credentials will automatically detect and use these credentials.
        export_default_credentials: true

    # Install SSH Key for terragrunt
    # should be switch to SA account with Key
    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_KEY }}
        # the key below is public information
        # https://docs.github.com/en/github/authenticating-to-github/keeping-your-account-and-data-secure/githubs-ssh-key-fingerprints
        known_hosts: "2048 SHA256:bfhfh github.com (RSA)"

    - name: Bootstrap - Terragrunt Plan
      run: |
        make plan-bootstrap

    - name: Folders - Terragrunt Plan
      run: |
        make plan-folders

    # - name: Org Policy - Terragrunt Plan
    #   run: |
    #     make plan-core-org-policy

